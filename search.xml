<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>矩阵奇异值分解</title>
    <url>/2020/04/03/%E7%9F%A9%E9%98%B5%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/</url>
    <content><![CDATA[<p>矩阵的奇异值分解（<em>singular value decomposition</em>，简称SVD）是线性代数中很重要的内容，并且奇异值分解过程也是线性代数中相似对角化分解（也被称为特征值分解，<em>eigenvalue decomposition</em>，简称EVD）的延伸。因此，以下将从线性代数中最基础的矩阵分解开始讲起，引出奇异值分解的定义，并最终给出奇异值分解的低秩逼近问题相关的证明过程。 </p>
<a id="more"></a>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>矩阵分解</tag>
      </tags>
  </entry>
  <entry>
    <title>5G Massive MIMO</title>
    <url>/2020/03/17/5G-Massive-MIMO/</url>
    <content><![CDATA[<p>修改中</p>
<p>Massive MIMO（大规模天线技术，亦称为<em>Large Scale MIMO</em>）是第五代移动通信（5G）中提高系统容量和频谱利用率的关键技术。此技术中，基站利用同一个时频域资源同时为多个终端进行服务，从而增强了基站同时接收和发送多路不同信号的能力，可以有效的提升频谱利用率、数据传输的稳定性和可靠性。 </p>
<a id="more"></a>
<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>原创文章，水平有限，如发现有错误，恳请及时联系作者修改，欢迎大家一起学习。 </p>
<p>本节作为引言，不讨论技术，只讨论当下实际中存在的一些问题，接下来会逐步更新Massive MIMO的部分关键技术。 </p>
<p>在LTE网络中，随着人们上网方式的改变，数据业务在近些年一直保持着爆炸性的增长，现有网络经常会出现支持不流畅的现象，但是在这样的情况下，仍然存在以下几个亟待解决的问题： </p>
<h3 id="移动视频的需求仍然在逐年增加"><a href="#移动视频的需求仍然在逐年增加" class="headerlink" title="移动视频的需求仍然在逐年增加"></a>移动视频的需求仍然在逐年增加</h3><p>这个问题是对峰值流量的一种挑战，可以考虑的方法包括：<strong>增大带宽</strong>；<strong>增加基站的密度</strong>；<strong>提高发射功率</strong>，这是比较不现实的，终端如果增加发射功率会导致电池电量的大量消耗，基站也存在同样问题，同时基站发射功率如果过大，会对邻区造成干扰；<strong>高Rank空分技术</strong>，现有的空分技术，波束之间的干扰比较大，导致不同终端的影响较大，从而降低了空分效率，如果引入高Rank空分技术，相互之间的干扰变小，类似很多辆车，并排行驶在泥泞的路上，尽管如果能安全通过，确实会比先后通过流量更高，但是效果并不明显，小心翼翼且易出事故，如果形成很多条互不干扰的路，就像立交桥一样，各自行驶，干扰极小，那么就极大的提升峰值流量。</p>
<h3 id="小区边缘用户体验差"><a href="#小区边缘用户体验差" class="headerlink" title="小区边缘用户体验差"></a>小区边缘用户体验差</h3><p>传统的4G宏站，从小区中心到小区边缘，业务速率会大幅度下滑，解决办法可以考虑如下：<strong>提高发射功率</strong>；<strong>新增站点补盲</strong>，这有悖于蜂窝网络的初衷，会大幅的提升组网费用；<strong>小区间干扰协调</strong>;<strong>波束赋形</strong>，传统的宽波束能量比较分散，作用距离相对较短，该方法可以通过使波束变窄，集中能量，则基站覆盖面积增大，如果能做到这一点，边缘用户的接收sinr会更高，体验也会得到明显提升，这种现象也可以类比相同功率的白炽灯、手电筒和激光笔，光束越窄，作用范围越大。</p>
<h3 id="垂直覆盖面临困难"><a href="#垂直覆盖面临困难" class="headerlink" title="垂直覆盖面临困难"></a>垂直覆盖面临困难</h3><p>传统4G宏站由于天线垂直波束过窄，架设天线时应着重考虑大多数的地面用户，天线高度不宜过高，所以无法为高层楼提供垂直的覆盖，造成高层楼信号较差。解决办法：<strong>提高基站架设高度</strong>;<strong>多组天线，分别覆盖</strong>;<strong>3D波束赋形</strong>，Massive MIMO 可在水平和垂直两个维度动态调整信号方向，使信号能量更集中、方向更精准，降低小区间的干扰，从而支持更多的用户在相同的时频资源上并行传输(空分复用)，从而达到提升小区吞吐量和边缘用户速率的效果。天线增益的提升，穿墙能力得到提升，实现了广度和深度的要求进行了有效的宽松。</p>
<p>此时，我们需要考虑，怎样才能有效提高信号的强度呢？提高信号强度，即提高接收到得信号功率，终端接收到的信号的信号功率大小表达式如下:</p>
<script type="math/tex; mode=display">
{ P_ { rx } }  = \frac { { { P_ { tx } } } } { { 4\pi  { R^2 } } } \frac { { { \lambda ^2 } } } { { 4\pi } } { G_ { rx } } { G_ { tx } }</script><p>其中不能无限的增大发射功率${P_{tx}}$，不能缩短基站和手机之间的距离$R$，低频段资源又十分有限，很难将频带降低$\lambda$，所以无法增大波长，此时只能通过提升天线的数量，把两个天线增益参数${G_{rx}}$和${G_{tx}}$再次提升，进而提高接收功率。</p>
<p>5G采用了高频段，虽然高频信号的传播损耗非常大，但是由于高频段波长短，因此可以在有效的面积内部署更多的天线阵子，通过大规模天线阵列形成具有非常高增益的窄波束来抵消传播损失。这个特点对手机尤为重要，为其实现Massive MIMO奠定了一个非常好的基础。</p>
<p>Massive MIMO主要存在以下几点优势： </p>
<ul>
<li>天线波束变窄<br>传统的8天线，可以实现波束赋形，把不同用户放在不同的波束中，干扰较小；如果采用Massive MIMO,波束主瓣更窄，数量更多，相互之间干扰变小。</li>
<li><p>空分隔离更易</p>
</li>
<li><p>复用流数增多<br>流数越多，速率越高</p>
</li>
<li>小区容量提升<h2 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h2></li>
</ul>
<h3 id="波束赋形"><a href="#波束赋形" class="headerlink" title="波束赋形"></a>波束赋形</h3><p>波束赋形是指根据特定场景自适应的调整天线阵列的幅度图。此过程中，天线阵列会形成一个指向用户的波束，基站根据终端上行的信号来判断来波方向，进而改变下行波束的赋形权值，使波束跟随用户移动。而Massive MIMO是通过引入大量的天线，使天线阵列同一时间和频率资源满足空间上分离的多位用户的需求。</p>
<ul>
<li>提升小区边缘用户的接收信号质量</li>
</ul>
<ul>
<li>降低邻区的干扰<br>三维立体信号可以灵活的跟踪终端，而排除传统MIMO宽波束在跟踪终端的同时，由于宽波束对邻区产生干扰</li>
</ul>
<h3 id="高Rank空分技术"><a href="#高Rank空分技术" class="headerlink" title="高Rank空分技术"></a>高Rank空分技术</h3><ul>
<li><p>提升单用户峰值速率 </p>
</li>
<li><p>提升小区空分用户数量<br>相比传统LTE系统，支持更高阶的MU-MIMO，支持远超过8个用户同时传输数据</p>
</li>
<li>提升小区频谱效率<br>超过100根天线，相比传统8天线获得更高的空分复用增益，极大提高频谱利用效率</li>
<li>提升小区峰值速率 </li>
</ul>
<h3 id="3D波束赋形"><a href="#3D波束赋形" class="headerlink" title="3D波束赋形"></a>3D波束赋形</h3><p><strong>避免“灯下黑”问题</strong>： 在理论上，4G宏站正下方的辐射存在“灯下黑”现象，辐射水平应该是最低的，这是因为天线存在指向性，传播信号基本是以一定的下倾角水平方向发射，而不是垂直方向，下倾角越大，覆盖越小，反之覆盖面积就越大。所以基站之下的建筑恰好处于盲区，基站辐射最小，其接收的信号一般为远处基站的信号。基站辐射强度即基站信号强度，基站信号强度与手机的辐射强度密切相关，离基站越远，基站信号强度越弱，手机发射的功率会越大。</p>
<p>达成上述三项的关键在于预编码技术，后续将从技术角度分别介绍数字预编码技术和模拟预编码技术。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>暂无</p>
]]></content>
      <categories>
        <category>通信</category>
      </categories>
      <tags>
        <tag>5G</tag>
        <tag>Massive MIMO</tag>
        <tag>阵列信号处理</tag>
      </tags>
  </entry>
  <entry>
    <title>递归最小二乘</title>
    <url>/2020/02/08/%E9%80%92%E5%BD%92%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>稳健矢量最优化自适应波束形成</title>
    <url>/2019/11/17/%E7%A8%B3%E5%81%A5%E7%9F%A2%E9%87%8F%E6%9C%80%E4%BC%98%E5%8C%96%E8%87%AA%E9%80%82%E5%BA%94%E6%B3%A2%E6%9D%9F%E5%BD%A2%E6%88%90/</url>
    <content><![CDATA[<p>在提高算法稳健性时，会用到不同的准则作为优化准则，将这些算法统一到一个框架下，本文构造了矢量最优化稳健波束形成方法，并通过二阶锥规划理论方法进行求解，分析各个参数对最优权矢量的影响，并推导自适应权矢量的近似表达式。</p>
<a id="more"></a>]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
      <tags>
        <tag>稳健</tag>
        <tag>权矢量</tag>
        <tag>最优化</tag>
        <tag>自适应</tag>
      </tags>
  </entry>
  <entry>
    <title>最小二乘法</title>
    <url>/2019/10/21/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>最小均方误差滤波器</title>
    <url>/2019/10/09/%E6%9C%80%E5%B0%8F%E5%9D%87%E6%96%B9%E8%AF%AF%E5%B7%AE%E6%BB%A4%E6%B3%A2%E5%99%A8/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>梯度下降算法</title>
    <url>/2019/09/16/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>协方差矩阵重构的零陷展宽算法</title>
    <url>/2019/09/02/%E5%8D%8F%E6%96%B9%E5%B7%AE%E7%9F%A9%E9%98%B5%E9%87%8D%E6%9E%84%E7%9A%84%E9%9B%B6%E9%99%B7%E5%B1%95%E5%AE%BD%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Welcome to my blog, enter password to read.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="b0bd454cfcfdd5ae2eee839c222ce1a72da3f68285d4017e67466714bb12be86"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>空间谱</category>
      </categories>
      <tags>
        <tag>零陷</tag>
        <tag>Capon谱</tag>
        <tag>深度</tag>
        <tag>宽度</tag>
      </tags>
  </entry>
  <entry>
    <title>空域矩阵预滤波DOA估计</title>
    <url>/2019/07/12/%E7%A9%BA%E5%9F%9F%E7%9F%A9%E9%98%B5%E9%A2%84%E6%BB%A4%E6%B3%A2DOA%E4%BC%B0%E8%AE%A1/</url>
    <content><![CDATA[<p>实际阵列在接收信号的同时，由于复杂的环境影响，往往会伴有很多干扰信号，但是只有一部分方位是人们感兴趣的，所以对其他方位的噪声以及干扰进行抑制是非常有必要的，由此需要一个空域滤波器，能够做到只让来自感兴趣方向的信号通过，并且抑制来自其余不感兴趣方向的信号。<br><a id="more"></a></p>
<p>矩阵空域滤波器以及波束域滤波器是空域滤波器中最为主要的两大分支。其中矩阵空域滤波器是比波束域滤波器更为合适作为预滤波器的一种空域滤波器，该滤波器不仅有着空域滤波器的基本特性，最为重要的一个特性就是，该滤波器处理完阵列信号后输出的数据不同于波束域滤波器输出的波束域信号，其输出仍为阵列信号。因此可以改良阵列数据，进而达到预处理的目的以及达到提高目标方位估计分辨率以及目标检测的能力。</p>
<h1 id="空域矩阵滤波器原理"><a href="#空域矩阵滤波器原理" class="headerlink" title="空域矩阵滤波器原理"></a>空域矩阵滤波器原理</h1><p>由阵列信号模型，对于一个由<em>N</em>个阵元构成的任意阵列，自远场入射<em>D</em>个窄带信号，方向角为${\Theta _D} = [{\theta _1}, \cdots {\theta _2} \cdots {\theta _D}]$，假设各个信号之间互不相关，则接收到的数据可以表示为如下形式：</p>
<script type="math/tex; mode=display">x(t)=A\left(\Theta_{D}\right) s(t)+n(t)</script><p>引入一个$N \times N$的矩阵$G$，作为滤波器对阵列接收信号进行滤波，则经过预处理的信号输出可以表示为：</p>
<script type="math/tex; mode=display">\begin{aligned}
y(t) &=G^{H} x(t)=G^{H} A\left(\Theta_{D}\right) s(t)+G^{H} n(t) \\
&=C\left(\Theta_{D}\right) s(t)+n_{c}(t)
\end{aligned}</script><p>其中$C({\Theta _D}) = {G^H}A({\Theta _D})$，可以等效为空域滤波后的阵列流形，${n_c}(t) = {G^H}n(t)$为原数据经过滤波的噪声数据矩阵。<br>为了使矩阵滤波器具有空域滤波的特性，使空域滤波后的阵列流形需要能抑制不感兴趣方位的信号，同时可以允许感兴趣方位的信号能无失真的通过，则需要满足如下约束条件：</p>
<script type="math/tex; mode=display">G^{H} a(\theta)=\left\{\begin{array}{cl}
a(\theta), & \theta \in \Theta_{P} \\
0, & \theta \in \Theta_{s}
\end{array}\right.</script><p>其中${\Theta _P}$表示感兴趣的扇面方位角，包含有希望处理的信息，称为通带扇面，${\Theta _S}$表示需要对信号进行抑制的扇面方位角，称为阻带扇面。 </p>
<h1 id="阻带约束通带最小均方准则"><a href="#阻带约束通带最小均方准则" class="headerlink" title="阻带约束通带最小均方准则"></a>阻带约束通带最小均方准则</h1><p>基于阻带约束通带最小均方准则设计的空域矩阵滤波器优化问题可以表示为：<br><img src="/images/Snipaste_2020-04-05_filter1.png" alt="img"></p>
<p>其中$\xi $表示阻带扇面内的噪声衰减率，不等式约束$\left|G^{H}\right|_{F} \leq \Delta$是限制滤波后的噪声功率在一定范围内。<br>为了将此优化问题转化为二阶锥规划问题，构建一个新的约束不等式:</p>
<script type="math/tex; mode=display">\left\|G^{H} a\left(\theta_{p}\right)-a\left(\theta_{p}\right)\right\|^{2} \leq \varepsilon, p=1,2, \cdots, P</script><p>其中$\xi $为一个非负变量，则上述优化问题可以用下列方式表示：<br><img src="/images/Snipaste_2020-04-05_filter2.png" alt="img"></p>
<p>将滤波矩阵$G$按行分为<em>N</em>个行向量，则${G^T} = [{g_1},{g_2}, \cdots {g_N}]$，所以$G = [g_1^T,g_2^T, \cdots g_N^T]$。定义$y = {[\varepsilon ,{g^T}]^T}$，$b = {[1,{0_{1 \times {N^2}}}]^T}$，同时满足$\varepsilon {\rm{ = }}{b^T}y$，则： </p>
<p><img src="/images/Snipaste_2020-04-05_filter3.png" alt="img"> </p>
<p>由此将阻带约束通带最小均方优化问题转变为标准的二阶锥规划形式，可以求得$y$的最优解，以其第$2 \sim\left(N^{2}+1\right)$个元素，重组得到$N \times N$维的滤波矩阵$G$。</p>
<h1 id="空域矩阵预滤波DOA估计与仿真分析"><a href="#空域矩阵预滤波DOA估计与仿真分析" class="headerlink" title="空域矩阵预滤波DOA估计与仿真分析"></a>空域矩阵预滤波DOA估计与仿真分析</h1><p>MUSIC算法属于目标方位估计的经典算法之一，相比于常规波束形成等算法，具有更高的分辨率，但是MUSIC算法在低信噪比、或者小快拍等情况下，性能会大幅下降。当阵列接受到目标信号后，通过空域矩阵滤波器对数据进行加工处理，在不影响通带扇面信号的情况下抑制阻带扇面内的干扰以及噪声。空域矩阵滤波器相对于其他的阵列信号预处理算法的一个明显优势是滤波器的输出数据仍为阵元域数据，经过此方法处理的数据仍可以被很多阵列信号处理算法应用，以达到抑制空间某方向干扰的目的。本节将预滤波的信号采用MUSIC方法进行方位估计，同时与经典MUSIC算法对比，分析包括分辨率、信噪比门限等在内的性能指标。</p>
<h2 id="空域矩阵预滤波DOA估计基本原理"><a href="#空域矩阵预滤波DOA估计基本原理" class="headerlink" title="空域矩阵预滤波DOA估计基本原理"></a>空域矩阵预滤波DOA估计基本原理</h2><p>经过空域滤波的信号协方差矩阵为：</p>
<script type="math/tex; mode=display">{R_y} = E[y{y^H}] = C(\Theta ){R_S}{C^H}(\Theta ) + {R_c}</script><p>其中阵列接收信号协方差矩阵${R_s} = E[s{s^H}]$，滤波后的噪声协方差矩阵${R_c} = {G^H}E[n{n^H}]G$。根据上式，采用MUSIC算法对滤波后的数据进行DOA估计，对滤波数据协方差矩阵${R_y}$进行特征分解，</p>
<script type="math/tex; mode=display">{R_y} = E\Lambda {E^H}</script><p>其中 ，$\Lambda=\left[\begin{array}{cc}\Lambda_{S} &amp; 0 \ 0 &amp; \Lambda_{N}\end{array}\right]$为特征值矩阵，${\Lambda _S}$为较大的$D$个特征值，${\Lambda _N}$为较小的$N - D$个特征值，$E=\left[\begin{array}{ll}E_{C S} &amp; E_{C N}\end{array}\right]$为特征向量组成的矩阵，${E_{CS}}$以及${E_{CN}}$分别是${\Lambda _S}$和${\Lambda _N}$对应的预处理后的特征向量张成的信号子空间与噪声子空间。 </p>
<p>由此方法生成的空域矩阵滤波器通带响应与期望响应仍然会存在一定误差，即经滤波处理后的信号会发生一定程度的畸变，为了消除该误差的影响，需要对MUSIC算法的方位谱表达式做调整，则基于矩阵预滤波的MUSIC空间谱的峰值位置表达式为：</p>
<script type="math/tex; mode=display">P_{P-\text { Masic }}(\theta)=\frac{c^{H}(\theta) c(\theta)}{c^{H}(\theta) E_{C N} E_{C N} c(\theta)}, \theta \in \Theta</script><p>其中$c(\theta ) = {G^H}a(\theta )$为接收信号滤波后等效的阵列流形矢量。</p>
<h2 id="仿真分析"><a href="#仿真分析" class="headerlink" title="仿真分析"></a>仿真分析</h2><p>对于一个由16个各向同性的阵元构成的均匀线列阵，三个等强度的非相干窄带信号源自远场分别由${\rm{ - }}{5^ \circ }$，${5^ \circ }$，${50^ \circ }$三个方向入射到阵列，接收信号背景噪声为高斯白噪声且与信号不相关，基于阻带约束通带最小均方准则设计滤波器进行仿真分析，对接收信号的目标方位进行估计，通过MUSIC算法对信号源进行空间谱估计，并与常规的MUSIC算法处理效果进行对比，分析空域矩阵滤波器的性能。令滤波器通带扇面${\Theta _P} = [ - 15,15]$，阻带扇面${\Theta _S} = [ - 90, - 21] \cup [21,90]$，通带和阻带之间的过渡带${\Theta _T} = [ - 20, - 16] \cup [16,20]$，矩阵的Frobenius范数约束值为1.65，噪声衰减率为0.35，仿真结果如下：<br><img src="/images/prefilter1.png" alt="img"></p>
<center>(a)预滤波算法对阻带干扰抑制效果曲线</center>  

<p><img src="/images/prefilter2.png" alt="img"></p>
<center>(b)预滤波算法的方位分辨率效果曲线</center>  

<p>从图中可以看出，无论是常规MUSIC算法或者空域矩阵预滤波MUSIC算法都可以有效正确的估计出目标的方位信息，并且预滤波MUSIC算法在阻带扇面范围抑制干扰和噪声效果明显，能够抑制来自$50^ { \circ }$方向的干扰，在通带扇面范围内的信号具有更高的分辨能力，谱峰更为尖锐，更加适合用于多个目标的方位估计。 </p>
<p>仿真分析常规MUSIC算法以及基于空域矩阵滤波后的MUSIC算法在信噪比不同的情况下，有效估计目标方位的概率，设定信噪比为$[ - 15:1:15]$dB，每个信噪比进行100次独立实验，如果两个信号的估计方位$\widehat{\theta}_{1}$和$\widehat{\theta}_{2}$满足： </p>
<script type="math/tex; mode=display">\left|\hat{\theta_{1}}-\theta_{1}\right|+\left|\widehat{\theta}_{2}-\theta_{2}\right|<\left|\theta_{1}-\theta_{2}\right|</script><p>则认为其估计有效，最终计算有效概率，仿真结果如下，</p>
<p><img src="/images/sinr1.png" alt="img"></p>
<center>信噪比不同情况下算法估计有效概率曲线</center> 

<p>图中显示了不同信噪比下两种方位估计算法的有效分辨概率，可以看出，空域矩阵滤波MUSIC算法具有更低的信噪比门限，在-15dB时，常规MUSIC算法几乎已经无法估计目标方位，但预滤波MUSIC算法已经可以在30%以上的概率可以有效估计目标，在信噪比高于-5dB时，两种方法均能正确估计目标方位，可见在低信噪比时预滤波MUSIC算法目标方位分辨能力明显优于常规MUSIC算法。 </p>
<p><img src="/images/sinr2.png" alt="img"></p>
<center>(a)信噪比不同情况下的估计误差曲线</center> 

<p><img src="/images/sinr3.png" alt="img"></p>
<center>(b)信噪比不同情况下的估计标准差曲线</center> 

<p>从图(a)、(b)中可以看出，当信噪比比较低时，预滤波MUSIC算法的估计偏差以及标准差明显低于MUSIC算法，随着信噪比的提高，差别越来越小。<br>由以上的仿真分析，该矩阵滤波器对阻带扇面内的噪声和干扰具有明显的抑制作用，提高了滤波器通带扇面内信号的方位分辨率，并且可以降低基于空域矩阵滤波方位估计时所使用算法的信噪比门限。</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol>
<li>Kobayashi K, Kim S, Kojima M. Correlative Sparsity in Primal-Dual Interior-Point Methods for LP, SDP, and SOCP (ENG)[J]. Applied Mathematics &amp; Optimization, 2008, 58(1):69-88.</li>
<li>Sturm J F. Using SeDuMi 1.02, A Matlab toolbox for optimization over symmetric cones[J]. Optimization Methods &amp; Software, 1999, 11(1-4):625-653.</li>
<li>Nesterov. Introductory Lectures on Convex Optimization: A Basic Course</li>
<li>冯杰, 杨益新, 孙超. 自适应空域矩阵滤波器设计和目标方位估计[J]. 系统仿真学报, 2007, 19(20).</li>
</ol>
]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
      <tags>
        <tag>阵列信号处理</tag>
        <tag>凸优化</tag>
        <tag>滤波器</tag>
      </tags>
  </entry>
  <entry>
    <title>拉格朗日乘子法</title>
    <url>/2019/04/15/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E4%B9%98%E5%AD%90%E6%B3%95/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>二阶锥规划</title>
    <url>/2019/04/02/%E4%BA%8C%E9%98%B6%E9%94%A5%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<p>二阶锥规划(<em>Second Order Cone Programming</em>，SOCP)是凸优化问题的一个子集，通过引入二阶锥规划方法，可以解决大量优化设计问题，同时应用此方法，能解决方位估计算法包括旁瓣级、主瓣宽度、阵增益、稳健性在内的很多性能指标无法兼顾的问题，本部分介绍二阶锥规划优化设计方法，用于基于不同设计准则的空域矩阵滤波器求最优解。<br><a id="more"></a><br>对于一个向量空间$V$与它的一个子集 ，如果子集$C$中的任意一点$x$与任意整数$a$，其乘积$ax$仍然属于子集$C$，则称$C$为一个锥。若一个锥$C$中任意两点$x$与$y$，以及任意两个正数$a$与$b$，都有$ax + by$属于$C$，则该锥为凸锥。<br><img src="/images/second_order_cone.png" alt="img"> </p>
<center>三维向量空间内的锥</center> 

<p>二阶锥规划是凸优化问题的一个子问题，它是在二阶锥约束和线性等式约束的条件下，最小化某线性目标函数，这是一种非常高效的求解算法，目的就是在满足约束条件的锥内寻找能够使目标函数最小化的最优点。其中二阶是指锥里面用到的是二范数，下式是一个二阶锥的表达式：<br><img src="/images/Snipaste_second_order.png" alt="img"> </p>
<p>其中$b \in {C^{a \times 1}}$，$y \in {C^{a \times 1}}$，${A_i} \in {C^{({a_i} - 1) \times a}}$，${b_i} \in {C^{({a_i} - 1) \times 1}}$，${c_i} \in {C^{a \times 1}}$，$c_i^Ty \in R$，${d_i} \in R$，$F \in {C^{g \times a}}$，$g \in {C^{g \times 1}}$，每个不等式约束可以表示为如下二阶锥： </p>
<p><img src="/images/Snipaste_second_1.png" alt="img"></p>
<p>其中$SOC_i^ { { a_i } }$是空间${ C^ { { a_i } } }$的二阶锥，定义为</p>
<p><img src="/images/Snipaste_second_2.png" alt="img"></p>
<p>式中等式约束可以表示为 </p>
<script type="math/tex; mode=display">
g - Fy \in  { \{ 0\} ^g }</script><p>其中零锥${\{ 0\} ^g}$，定义为：</p>
<p><img src="/images/Snipaste_second_3.png" alt="img"> </p>
<p>线性规划和凸二次规划都属于二阶锥规划，同时，由于二阶锥规划约束可以表示为线性矩阵不等式，所以它也是半定规划的子集。 </p>
<p><img src="/images/Snipaste_second_4.png" alt="img"> </p>
<p>其中$I$表示单位矩阵<br>可以通过内点法求解二阶锥规划问题，例如SeDuMi，相比于半正定规划求解，通过这种方法求解此类优化问题速度更快。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li>Nesterov. Introductory Lectures on Convex Optimization: A Basic Course</li>
</ol>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>凸优化</tag>
        <tag>二阶锥</tag>
      </tags>
  </entry>
  <entry>
    <title>线性预测</title>
    <url>/2019/03/17/%E7%BA%BF%E6%80%A7%E9%A2%84%E6%B5%8B/</url>
    <content><![CDATA[<p>线性预测是Wiener Filter的应用，作为信号识别的特征以及信号编码的一种实现途径。</p>
<a id="more"></a>
<h1 id="前向线性预测原理"><a href="#前向线性预测原理" class="headerlink" title="前向线性预测原理"></a>前向线性预测原理</h1><p> 以语音信号为例，声道模型的一种观点是：级联结构的共振峰模型。即：对于一般元音，可以用全极点模型，传输函数： </p>
<script type="math/tex; mode=display">H(z)=\frac{G}{1-\sum_{i=1}^{p} a_{i} z^{-k}}</script><p> 称系统 </p>
<script type="math/tex; mode=display">\hat{\boldsymbol{x}}(n)=\sum_{i=1}^{p} a_{i} x(n-i)</script><p> 为线性预测器。$\hat{\boldsymbol{x}}(n)$是$x(n)$的估算值。${a_i}$为预测系数(<em>Linear Prediction Coefficient</em>, LPC)，$p$为对应阶数。<br> 对应单点预测误差： </p>
<script type="math/tex; mode=display">e(n)=x(n)-\hat{x}(n)=x(n)-\sum_{i=1}^{p} a_{i} x(n-i)</script><p> 对${a_i}$求偏导即可实现求解，得到的方程组通常称为Yule-Walker方程。 </p>
<h1 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h1><p> 利用预测系数估计逼近系统响应$H$，可以用该系数表征语音的特性，也可以用逼近的$H$观察声道特性，同样可以进行共振峰提取，这些都可以看作说话人的特征。</p>
<p> 以下代码： </p>
<pre><code>clear all; clc; close all;
filedir=[];                             % 设置数据文件的路径
filename=&#39;a.wav&#39;;                       % 设置数据文件的名称
fle=[filedir filename]                  % 构成路径和文件名的字符串
[x,fs]=wavread(fle);                    % 读入语音数据
L=240;                                  % 帧长
p=30;                                   % LPC的阶数
y=x(8001:8000+L);                       % 取一帧数据
ar=lpc(y,p);                            % 线性预测变换
nfft=512;                               % FFT变换长度
W2=nfft/2;
m=1:W2+1;                               % 正频率部分下标值
Y=fft(y,nfft);                          % 计算信号y的FFT频谱
Y1=lpcar2ff(ar,W2-1);                   % 计算预测系数的频谱
% 作图
subplot 311; plot(y,&#39;k&#39;);
title(&#39;一帧语音信号的波形&#39;); ylabel(&#39;幅值&#39;); xlabel(&#39;(a)&#39;)
subplot 312;
plot(m,20*log10(abs(Y(m))),&#39;k&#39;,&#39;linewidth&#39;,1.5);
line(m,20*log10(abs(Y1)),&#39;color&#39;,&#39;r&#39;,&#39;linewidth&#39;,2)
axis([0 W2+1 -30 25]); ylabel(&#39;幅值/db&#39;);
legend(&#39;FFT频谱&#39;,&#39;LPC谱&#39;,3); xlabel([&#39;样点&#39; 10 &#39;(b)&#39;])
title(&#39;FFT频谱和LPC谱的比较 p=4&#39;);

subplot 313;
plot(m,20*log10(abs(Y(m))),&#39;k&#39;,&#39;linewidth&#39;,1.5);
line(m,20*log10(abs(Y1)),&#39;color&#39;,&#39;r&#39;,&#39;linewidth&#39;,2)
axis([0 W2+1 -30 25]); ylabel(&#39;幅值/db&#39;);
legend(&#39;FFT频谱&#39;,&#39;LPC谱&#39;,3); xlabel([&#39;样点&#39; 10 &#39;(c)&#39;])
title(&#39;FFT频谱和LPC谱的比较 p=30&#39;);
</code></pre><p>结果图：<br><img src="/images/LPC.png" alt="img"> </p>
<p> 可以看出，信号的频谱由慢变化分量调制高频信号，对应时域就是卷积，而声道模型对应卷积的$h(n)$，$p$选择过小估计不准，选择过大容易过拟合，这么看来lpc说是预测其实本质也是拟合的问题，同样有Over-fitting. 得到LPC谱之后，可以利用峰值查找等方式，进行共振峰估计。</p>
]]></content>
      <categories>
        <category>自适应滤波</category>
      </categories>
  </entry>
  <entry>
    <title>维纳滤波器——GSC算法及语音增强</title>
    <url>/2018/08/17/%E7%BB%B4%E7%BA%B3%E6%BB%A4%E6%B3%A2%E5%99%A8%E2%80%94%E2%80%94GSC%E7%AE%97%E6%B3%95%E5%8F%8A%E8%AF%AD%E9%9F%B3%E5%A2%9E%E5%BC%BA/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>维纳滤波器——LCMV及MVDR的实现</title>
    <url>/2018/07/28/%E7%BB%B4%E7%BA%B3%E6%BB%A4%E6%B3%A2%E5%99%A8%E2%80%94%E2%80%94LCMV%E5%8F%8AMVDR%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>维纳滤波器——FIR与IIR滤波器设计</title>
    <url>/2018/07/11/%E7%BB%B4%E7%BA%B3%E6%BB%A4%E6%B3%A2%E5%99%A8%E2%80%94%E2%80%94FIR%E4%B8%8EIIR%E6%BB%A4%E6%B3%A2%E5%99%A8%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>多重信号子空间分类算法</title>
    <url>/2018/06/27/%E5%A4%9A%E9%87%8D%E4%BF%A1%E5%8F%B7%E5%AD%90%E7%A9%BA%E9%97%B4%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<p>多重信号子空间分类算法通常又被称为多重信号特征法，这种信号子空间方法具有多信号同时测向能力，并且其方位分辨率较高，它的主要思想是：将阵列输出数据进行自相关处理后获得的协方差矩阵进行特征分解，得到信号子空间和噪声子空间，然后利用这两个子空间的正交性来构造MUSIC方位谱，此时方位谱的谱峰就是需要估计的信号方位。 </p>
<a id="more"></a>
<p>本文主要记录MUSIC算法的相关推导以及相关因数对算法性能趋势的影响和仿真。</p>
<p>假设信号与噪声之间不具有相关性，同时各个阵元之间的噪声互相不相关，则根据窄带信号模型，其协方差矩阵为： </p>
<script type="math/tex; mode=display">
R = E[X { X^H } ] = AE[S { S^H } ] { A^H }  + E[N { N^H } ] = A { R_s } { A^H } + { \sigma ^2 } I</script><p>其中，符号H表示矩阵的共轭转置。$S$表示目标信号，对$R$进行特征分解，则信号协方差矩阵可以由特征值和对应的特征向量表示为如下形式：</p>
<script type="math/tex; mode=display">
R { \rm { = } } \sum\limits_ { i = 1 } ^M { { \lambda _i } }  { e_i } e_i^H</script><p>假设有$d(d &lt; M)$个信号由远处入射到阵列，且认为这些信号都能被检测到，将获得的特征值由大到小排列后，可以划分协方差矩阵$R$特征分解后的特征值与特征向量：</p>
<script type="math/tex; mode=display">\Lambda=\left[\begin{array}{cc}\Lambda_{S} & 0 \\ 0 & \Lambda_{N}\end{array}\right]</script><script type="math/tex; mode=display">E=\left[\begin{array}{ll}E_{C S} & E_{C N}\end{array}\right]</script><p>式中，${\Lambda _S}$和${\Lambda _N}$分别是通过降序排列的信号特征值和噪声特征值构成的对角矩阵，${E_S}$和${E_N}$分别是由信号特征向量和噪声特征向量张成的信号子空间以及噪声子空间。由${E_S}$张成的空间，属于$A(\theta )$张成的空间的子空间，即</p>
<script type="math/tex; mode=display">\operatorname{span}\left\{E_{S}\right\} \subseteq \operatorname{span}\{A(\theta)\}</script><p>式中，$span\{ {E_S}\} $表示由${E_S}$的列生成的子空间。如果入射到阵列的信号互相不相干，则信号协方差矩阵属于满秩矩阵，那么信号子空间中向量的个数等于这个空间的维数，所以存在如下关系：</p>
<script type="math/tex; mode=display">\operatorname{span}\left\{E_{S}\right\}=\operatorname{span}\{A(\theta)\}</script><script type="math/tex; mode=display">\operatorname{span}\left\{E_{N}\right\} \perp \operatorname{span}\{A(\theta)\}</script><p>由此，我们可以构造基于多重信号特征法的空间方位谱。因为扫描向量$a(\theta )$属于阵列流形向量空间和信号子空间，所以它与噪声子空间也存在正交关系，即有：</p>
<script type="math/tex; mode=display">E_{N}^{H} a_{i}(\theta)=0, \quad i=1, \cdots d</script><p>所以扫描向量与$a(\theta )$噪声子空间的欧几里得距离(Euclidean Distance)的平方为:</p>
<script type="math/tex; mode=display">\|l\|^{2}=a^{H}(\theta) E_{N} E_{N}^{H} a(\theta)=0</script><p>但是在实际情况中，通常无法与理想情况做到一致，如由于实际数据中噪声的影响，上式并不成立，因此，实际进行目标方位估计是通过最小化搜索的方式实现的，即：</p>
<script type="math/tex; mode=display">\theta_{MUSIC}=\arg _{\theta} \min a^{H}(\theta) E_{N} E_{N}^{H} a(\theta)</script><p>所以，基于MUSIC算法的方位谱估计为</p>
<script type="math/tex; mode=display">P_{MUSIC}=\frac{a^{H}(\theta) a(\theta)}{a^{H}(\theta) E_{N} E_{N}^{H} a(\theta)}</script><p>本部分通过仿真讨论在不同信号参数对MUSIC算法性能的影响，主要考虑当阵元数、阵元间隔、快拍数以及信噪比四个方面发生变化时进行仿真分析。假设3个非相干窄带信号入射到均匀线列阵，信号频率为2kHz，信号的入射角度分别为${10^ \circ }$、${30^ \circ }$、${50^ \circ }$，当阵元数、阵列孔径、快拍数以及信噪比变化时进行仿真分析。<br><img src="/images/MUSIC_1.png" alt="img"> </p>
<center>阵元数及阵列孔径发生变化对MUSIC算法性能曲线</center> 

<p>分析阵元数以及阵列孔径对MUSIC算法影响时，分别采用16元阵和24元阵，阵元间隔分别为$0.5\lambda$和$0.7\lambda$，其中 为阵列接收信号的波长。仿真结果如上图所示。<br>由图可以看出，无论是改变阵元的数量或者改变阵列孔径的大小对MUSIC算法的性能均会产生影响：当阵元间距相同时，接收阵元数相对较多的信号空间谱，其谱峰明显尖锐，分辨率较高，当阵元数相同，阵元间距为$0.7\lambda$时，相对于阵元间距为$0.5\lambda$的空间谱，其估计性能明显下降，同时在$ - {68^ \circ }$和$ - {42^ \circ }$出现虚假谱峰，严重影响对目标方位的正确估计。<br>在分析快拍数和信噪比对MUSIC算法影响时，分别采用快拍数为1024和2048，信噪比为5dB和15dB的参数情况。仿真结果如图所示：</p>
<p><img src="/images/MUSIC_2.png" alt="img"> </p>
<center>快拍数与信噪比发生变化对MUSIC算法性能曲线</center> 

<p>从上图中可以看出，信噪比和快拍数对MUSIC算法的方位估计效果均有显著影响，当信噪比均为15dB时，算法对快拍数较多的信号处理效果更好，当快拍数均为1024，信噪比分别为5dB和15dB时，MUSIC算法对15dB的信号估计效果明显优于5dB信号，其峰更加尖锐。 </p>
<p><img src="/images/MUSIC_3.jpg" alt="img"> </p>
<center>信噪比不同时MUSIC算法有效估计概率曲线</center> 

<p>如上图所示，仿真是在其他条件保持不变的情况下，信号信噪比由-10dB提升至30dB，每提升1dB，以MUSIC算法独立重复进行100次方位估计实验，如果估计的角度与期望方位相差小于${1^ \circ }$，则认为估计有效，否则估计无效。当信噪比在0dB以下时，有效概率不足30%，基本无法正常工作，但是从-2dB至6dB之间，随着信噪比的增加，有效概率明显提升，信噪比大于6dB时完全可以正确估计目标。<br><img src="/images/MUSIC_4.png" alt="img"> </p>
<center>不同信噪比估计偏差曲线</center> 

<p><img src="/images/MUSIC_5.png" alt="img"> </p>
<p><center>不同信噪比估计标准差曲线</center><br>如以上两图所示，在上述条件下，对不同信噪比下的估计标准差以及估计偏差进行仿真。其中估计偏差为100次估计的方位偏离期望方位的平均值，估计标准差为对三个信号的估计偏差求平均标准差，随着信噪比提高，其估计偏差越来越小、并且出现估计偏差的概率会明显降低。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li>王永良. 空间谱估计理论与算法[M]. 清华大学出版社, 2004.</li>
</ol>
]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
      <tags>
        <tag>DOA</tag>
        <tag>Matlab仿真</tag>
      </tags>
  </entry>
  <entry>
    <title>常规波束形成</title>
    <url>/2018/03/27/%E5%B8%B8%E8%A7%84%E6%B3%A2%E6%9D%9F%E5%BD%A2%E6%88%90/</url>
    <content><![CDATA[<p>波束形成是阵列信号处理算法中最为基础也是应用最为广泛的一种算法，如今依旧是水声方面信号处理的主要组成部分之一。波束形成算法的功能大致可以分为两个方面，一方面是为了获得较为理想的输出信噪比，另一方面是为了获得较高的DOA分辨能力。<br><a id="more"></a><br>对于平面波而言，由于其幅度相同，所以到达基阵上的信号可以视为同一信号，但是由于各个阵元空间位置不同，导致对于同一时间接收到的信号，相对于参考阵元，各个阵元会有不同的到达时间延迟。如果采取方法对每个阵元的时延量进行补偿，再将各个阵元上的延迟信号求和，会形成一个标量输出，其目的就是形成这样一个波束，并将其扫描到一个特定的方向上。 </p>
<p>对于由$N$个间距为$d$，特性相同的传感器组成的均匀线列阵，如果信号的入射角度和阵列的法线方向的夹角为$\theta$，则每两个相邻的传感器收到的信号时间延迟为 </p>
<script type="math/tex; mode=display">
\tau { \rm { = } } \frac { \lambda } { c } d\sin \theta  = \frac { { 2\pi } } { w } d\sin \theta</script><p>式中，$c$为波速，$\lambda$为波长。<br>以第一个阵元为参考阵元，那么为了补偿各阵元时延，以形成一个主瓣，所以常规波束形成器的加权向量可以构造为</p>
<script type="math/tex; mode=display">
w(\theta ) = { [1{\rm { } } { e^ { - jw\tau } } { \rm { } } \cdots { \rm { } } { e^ { - jw(N - 1)\tau } } ] ^T }</script><p>则该算法的波束形成器输出可以表示为 </p>
<script type="math/tex; mode=display">
y(t) = { w^H } (\theta )X(t) = \sum\limits_ { i = 1 } ^N { { w_i } { x_i } (t) }</script><script type="math/tex; mode=display">
R = E[X { X^H } ]</script><p>实际中接收的信号都是由快拍数构成的，且因受到接收时间的限制，实际阵列接收到的数据长度都是有限的，所以无法获取理论分析所得协方差矩阵，因此只能用最大似然估计法对理论上的数值求取估计矩阵，估计矩阵表示如下： </p>
<script type="math/tex; mode=display">
\hat R = \frac { 1 } { L } X { X^H }</script><p>如果令加权向量中的观测范围可以变化，则其在形式上等同于扫描向量$a(\theta )$，则其输出功率可以表示为 </p>
<script type="math/tex; mode=display">
{ P_ { CBF } } (\theta ) = { w^H } (\theta )\hat Rw(\theta )</script><p>为了验证常规波束形成的方位估计效果，假设由16个各向同性的阵元组成的均匀线列阵，定义阵列的法线方向为${0^ \circ }$，阵元间距为$\lambda /2$，两个等强度的窄带信号入射到该阵列，信号的频率为2000Hz，噪声背景为高斯白噪声，同时信号和噪声不相关，快拍数为1024，改变信号的入射角度和信噪比，仿真结果如下：<br><img src="/images/CBF_1.png" alt="角度(-5,5),sinr=15dB"></p>
<center>角度(-5,5),sinr=15dB</center> 

<p><img src="/images/CBF_2.png" alt="角度(-5,2),sinr=15dB"></p>
<center>角度(-5,2),sinr=15dB</center> 

<p><img src="/images/CBF_3.png" alt="角度(-5,1),sinr=15dB"></p>
<center>角度(-5,1),sinr=15dB</center> 

<p><img src="/images/CBF_4.png" alt="角度(-5,2),sinr=10dB"></p>
<center>角度(-5,2),sinr=10dB</center> 

<p>在不同信号参数下，由常规波束形成法得到的空间方位谱分别在图(a)、(b)、(c)、(d)给出。当两个信号的入射角间隔${6^ \circ }$，信噪比为15dB时，如图(c)所示，已经无法正常分辨两个目标，保持信噪比不变，增大信号入射角度间隔至${7^ \circ }$，如图(b)，已经能够分辨两个目标，并且能给出目标正确的入射方向，如将间距增大到${10^ \circ }$，则图(a)，两个信号已经完全分离，在各自来波方向均有明显的峰，在将入射角度间距设置在${7^ \circ }$的情况下，令信噪比SNR下降至10dB，从图(d)中可以看到，由于入射的信号能量较低，输出数据的信噪比明显降低。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li>Worsley K J, Evans A C, Marrett S, et al. A three-dimensional statistical analysis for CBF activation studies in human brain[J]. Journal of Cerebral Blood Flow &amp; Metabolism Official Journal of the International Society of Cerebral Blood Flow &amp; Metabolism, 1992, 12(6):900-18.</li>
<li>孙超. 水下多传感器阵列信号处理[M]. 2007.</li>
</ol>
]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
      <tags>
        <tag>DOA</tag>
        <tag>波束形成</tag>
      </tags>
  </entry>
  <entry>
    <title>正态/拉普拉斯/对数高斯/瑞利 分布</title>
    <url>/2018/03/05/%E6%AD%A3%E6%80%81-%E6%8B%89%E6%99%AE%E6%8B%89%E6%96%AF-%E5%AF%B9%E6%95%B0%E9%AB%98%E6%96%AF-%E7%91%9E%E5%88%A9-%E5%88%86%E5%B8%83/</url>
    <content><![CDATA[<p>本文主要介绍正态分布、拉普拉斯分布等常用分布拟合的理论推导以及代码实现。</p>
<a id="more"></a> 
<h1 id="理论推导"><a href="#理论推导" class="headerlink" title="理论推导"></a>理论推导</h1><p>假设数据独立同分布。对于任意数据点${x_i}$，对应概率密度为$f({x_i})$，最大似然函数：</p>
<script type="math/tex; mode=display">J=\prod_{i=1}^{N} f\left(x_{i}\right)</script><p>表示成参数，并写成对数形式： </p>
<script type="math/tex; mode=display">L(\theta)=\ln J(\theta)=\sum_{i=1}^{N} f\left(x_{i} ; \theta\right)</script><h2 id="正态分布"><a href="#正态分布" class="headerlink" title="正态分布"></a>正态分布</h2><p>对于正态分布： </p>
<script type="math/tex; mode=display">f(x)=\frac{1}{\sqrt{2 \pi} \sigma} e^{-\frac{(x-\mu)^{2}}{2 \sigma^{2}}}</script><p>求偏导得参数估计： </p>
<script type="math/tex; mode=display">\hat{\mu}=\frac{\sum_{i=1}^{N} x_{i}}{N}</script><script type="math/tex; mode=display">\hat{\sigma}^{2}=\frac{\sum_{i=1}^{N}\left(x_{i}-\mu\right)^{2}}{N}=\frac{(\mathrm{x}-\mu)^{T}(\mathrm{x}-\mu)}{N}</script><h2 id="拉普拉斯分布"><a href="#拉普拉斯分布" class="headerlink" title="拉普拉斯分布"></a>拉普拉斯分布</h2><p>对于拉普拉斯分布: </p>
<script type="math/tex; mode=display">f(x)=\frac{1}{2 b} e^{-\frac{|x-\mu|}{b}}</script><p>由于其概率密度曲线为对称分布，因此均值估计可用统计均值直接表示： </p>
<script type="math/tex; mode=display">\hat{\mu}=\frac{\sum_{i=1}^{N} x_{i}}{N}</script><p>最大似然函数求偏导，得出b的估计： </p>
<script type="math/tex; mode=display">\hat{b}=\frac{\sum_{i=1}^{N}\left|x_{i}-\mu\right|}{N}</script><h2 id="对数正态分布"><a href="#对数正态分布" class="headerlink" title="对数正态分布"></a>对数正态分布</h2><p>对数正态分布： </p>
<script type="math/tex; mode=display">f(x)=\frac{1}{x \sqrt{2 \pi} \sigma} e^{-\frac{(\ln x-\mu)^{2}}{2 \sigma^{2}}}</script><p>事实上，令$t = \ln x$，则参数求解与正态分布完全一致。 </p>
<script type="math/tex; mode=display">\hat{\mu}=\frac{\sum_{i=1}^{N} t_{i}}{N}</script><script type="math/tex; mode=display">\hat{\sigma}^{2}=\frac{\sum_{i=1}^{N}\left(t_{i}-\mu\right)^{2}}{N}=\frac{(\mathfrak{t}-\mu)^{T}(\mathfrak{t}-\mu)}{N}</script><h2 id="瑞利分布"><a href="#瑞利分布" class="headerlink" title="瑞利分布"></a>瑞利分布</h2><p>瑞利分布： </p>
<script type="math/tex; mode=display">f(x)=\frac{x}{\sigma^{2}} e^{-\frac{(x-\mu)^{2}}{2 \sigma^{2}}}</script><p>最大似然求导，得出参数估计： </p>
<script type="math/tex; mode=display">\hat{\sigma}^{2}=\frac{\sum_{i=1}^{N} x_{i}^{2}}{2 N}</script><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="正态分布-1"><a href="#正态分布-1" class="headerlink" title="正态分布"></a>正态分布</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x       &#x3D; x(:);                 % should be column vectors !</span><br><span class="line">N       &#x3D; length(x);</span><br><span class="line">u       &#x3D; sum(x)&#x2F;N;</span><br><span class="line">sig2    &#x3D; (x-u)&#39;*(x-u)&#x2F;N;</span><br></pre></td></tr></table></figure>
<h2 id="拉普拉斯分布-1"><a href="#拉普拉斯分布-1" class="headerlink" title="拉普拉斯分布"></a>拉普拉斯分布</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x       &#x3D; x(:);                 % should be column vectors !</span><br><span class="line">N       &#x3D; length(x);</span><br><span class="line">u       &#x3D; sum( x )&#x2F;N;</span><br><span class="line">b       &#x3D; sum(abs(x-u))&#x2F;N;</span><br></pre></td></tr></table></figure>
<h2 id="对数正态分布-1"><a href="#对数正态分布-1" class="headerlink" title="对数正态分布"></a>对数正态分布</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">t     &#x3D; log(x(:));                 % should be column vectors !</span><br><span class="line">N       &#x3D; length(x);</span><br><span class="line">m       &#x3D; sum( t )&#x2F;N;</span><br><span class="line">sig2      &#x3D; (t-m)&#39;*(t-m)&#x2F;N;</span><br></pre></td></tr></table></figure>
<h2 id="瑞利分布-1"><a href="#瑞利分布-1" class="headerlink" title="瑞利分布"></a>瑞利分布</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x       &#x3D; real(x(:));                 % should be column vectors !</span><br><span class="line">N       &#x3D; length(x);</span><br><span class="line">s       &#x3D; sum(x.^2)&#x2F;(2*N);</span><br></pre></td></tr></table></figure>
<h1 id="应用举例"><a href="#应用举例" class="headerlink" title="应用举例"></a>应用举例</h1><p>以正态分布为例： </p>
<pre><code>rng(&#39;default&#39;) % for reproducibility
x = 3*randn(100000,1)-2;
%fitting
x       = x( : );                 % should be column vectors !
N       = length(x);
u       = sum(x)/N;
sig2    = (x-u)&#39;*(x-u)/N;

%Plot

figure;
%Bar
subplot 311
numter = [-15:.2:10];
[histFreq, histXout] = hist(x, numter);
binWidth = histXout(2)-histXout(1);
bar(histXout, histFreq/binWidth/sum(histFreq)); hold on;grid on;
%Fitting plot
subplot 312
y = 1/sqrt(2*pi*sig2)*exp(-(numter-u).^2/2/sig2);
plot(numter,y,&#39;r&#39;,&#39;linewidth&#39;,2);grid on;

%Fitting result
subplot 313
bar(histXout, histFreq/binWidth/sum(histFreq)); hold on;grid on;
plot(numter,y,&#39;r&#39;,&#39;linewidth&#39;,2);
</code></pre><p>结果图： </p>
<p><img src="/images/normal_distribution.png" alt="img"></p>
]]></content>
      <categories>
        <category>信号处理</category>
      </categories>
      <tags>
        <tag>正态分布</tag>
        <tag>拉普拉斯分布</tag>
        <tag>对数高斯分布</tag>
        <tag>瑞利分布</tag>
      </tags>
  </entry>
  <entry>
    <title>站点日志</title>
    <url>/2018/02/25/%E7%AB%99%E7%82%B9%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Welcome to my blog, enter password to read.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="33a1c77ff1f70b5ca4b914522496caa0b868b5354cd0857a023684164b939d5e">519d09e62767155dd7275405dd96e91a9ebd0f8d23468e279f6ddc49479888fbdffefaeecde9072ff904847d08f3ec916aaed56cb9f379b3c407bf5abe22ed2d0786cf8b1b35570ec4f918b4cd858e1ebe2cb2374869c33c1b2e851e5032653513447a456139ff4fe5900c5fcc1f2bef489bbc9ac2727e280a45235c547b26359c7a57bfa02e7891101b48befcaa3d96ac296ee0001a37b6b5e54bf7b386b1b51460d892b3d4bc6b401b1f145a462091af7d440878566c5675a6cd902842328c2b5d821e33803e689e1845aff53792a1406f8bb471c8fbe957dd2d4e9fa3e668cfe11800cc397c1c0afd9382dc43cd9a27a4ef21bd6cc6066034c61e672d61637e90fef66f488b41296dfe8e55d8d7aa0053dd6f420fd661a784bcd78f852c151db76dabcbb5c249b27db9538390a416e276ec564e7c057b64243c404a6b33c18550395a6ac5b1a795a07338ba9219d7d9f9aca87e42073ede17476c821b9d4974a13867b7d1abd776b39aef77bdfc91ac9f32187f8865df70b68a062aa4cffe3763eecd3770dfdb7039f4958784a97b2e0a0bda08e5f63b53a0eab357280b75b2733e531f39b6db3cbbc8f75b696c3ae9e5fb083e3c4aa83cd3323159e6ae07c8c1b10dd83df98e68a2f72caf584f37892c2d9186d6546d2eeac899891c9932e2c1f62f4162924a8665ae16156d66e1aec59726a4a59523b28d7193d053d858b5c7f7a07e2bf050a1bf9ce602bad8bfb02cf3688c44781bc3c592b84e39e0b33aea836d6cfa4a7ba67aaa25947dc7ded91caffd05a22ec07870c419412a3b79975ff2945f6da9ebd2ccee71f409e073a3f32c767d1fc520d01bd77466e61b3425f1929a9d3c0d7fd727109321b3acba0e2602b12a4601c4b28ee43aad33085d1189672e724d97fb23dd3b8e8446ad2727d1b84c540ed77c1e38ed4b3d1299c5d7ad385b9e670d95cce675d686376e83d45a872aa32d33193826b3084ea9f3b5abd0daf3ae329fbbc5892d24b73245f99abac843cde685eaf9abfd4469df4240b235c72942052977297735183a283a67f9f688d1b89aa343489caaf122cb4718e2533a5dc5913dda9e8dd270d7163fef8552816d6067e3adf5f3f63dc229c47e29c5a76b877ee13421d80f4f874f5bb1b814248248a407e09c07ef19738c618b5bef31aff1d8194bf641b29f77b4c0e588a3fc1712a22d5bc21cc91e563e6cc219a91facc238fde3614a4274dc128c4c02d161bf9ce018ecad9e2dadf4ab3899e92f9132c5a467866a393b784195f3bb6739e99538641d8e173a41c9a5cf902056a664770b5dd9181dda7e0a41c2d4545227013a89277bdff696a7380b1d31c3dbd15289c72c4b73bae8f09c01fe9db826c118493ad8e25a600e7f154d0472594aa1e31ac035ac0ac66028372c5c08afc86bd3dabec9221ef3411e617b76926a229a1f0eb0e8f280295366d27f119d819c7d96a147e241ca32d1605e8ab32329bc3e4e2e7b9e27110a66c46897d5c854b2d01783e1400d0cccb80bbf1f281fa34c2ab25b7505a108585e51e6f117c77620ac31f0d18df4a75b660b6216f1ec297d825d9d969e2de9d8fd753ed4eb0c430ccc0f2cb424a882c8eb35b644030405efa36624ce202deb687f13b988048f09b0ab1798228bec897c1d022e4c3cafc3c88850b9e31b5826ced4a2c7179bbd6f4148b223dabca73ee013d984f1a791adda6859c5799ebb8bf39b3259708dadedb51e1f68cb230a766eedbb4490d29cdd0d3805a5e86c1acc63a1a1e32157dbefa618cf1cf98f3c64b05321cd48df784fda3a78b5fef210a6fad3f84a56a314eaf2b855b4ec62f520fc9a2100c7ea2644bf188c77592b981a034071063133f307f103e17311eb52b63c5034088845e0f978b40e86c26efd5343d0c452ee7dad4e1ddefc3691429ad7d9491a6defc50cbf43a726e65156e76bb805a3e1a6407133809b7eaaa692e642ed59333b07b9ca9cf266089f9192645ba11dd23b343c1f45136c8299cc4c66503de729a27dbdcdd44b5b08c1a9d6f5aade2d5449dc51c2a0dcecd37f53223e63fae3dbfe78a4486618321bdbd6198faccffd017e4f71c639822e7060594ffa2710a545466fc4d0a70e870d47e020e16bc979ceafffc59d3f7d9c7acb56f5693bf86b4e402578ae878fe58a02c149418753293bfc300171d5fa3331aebde40e4c28c9e485fc72a566a69f6eecc82eee6cfe7ed71b715e378a190ddc78c159fe1686acd3965191df589b50dae25518b7f3b33755d2ff369b97f92979fe80223b32d3ad42261a9067dffa7ea2261c98d862dcfb70bbdf6a9f7a2e26ed9204a9d98241fd63100439d68cf63030cd67d1287b4be7e6c4fcb12847d79eac0777fffa84cbbf4cb4c1d38f1ccf684d74023567fd368cbda6b043abfb4433313c659130d3d549425d8ac6c61be2898294854a7773598ae8057b3ace8c2e1f8016f3bed82d9eae02f7bc4e93a01a659c0f9a9c667aa69ff0db90f98d41e815cb15eccb72c08b1d0c1631874f7662d2420dbdadad93a72e88a4e686297984ff9c6469b23a051a76d22c1ccf2f84beb96c1c1e9e178a39be6cc692ce9bdbe53e45f3c76ef377a6fae5ed11ff440cc6ae3d3bb572b00cec8f3944ec2862eb009ac24395e48a9d70d5cc9526900c07c9a0be55448c2c09607ade62ca9853a534b801d5715715cfa562245daaed61d0b9bf9fea08fb11ec992f4c7263b8d7dd2244622f4fb1de790a2b7c3e7660ed4656b529590662ca4db929c2243bcf518891f68893156bcd04f12e12ef88fff43fcf469ecdebb8f683c5bf776153f56ac0a86c255346aa9d4ef4737b547e1aeeeff69629356df86e44b3dbfcfb4fe2f052120efb129eb9e206e32bda483fd54affbceb867dd1fed59103edf040cb015a06b4516970e5788c274e60fd5d449c4c651aaf3c48c996e72ebfb0357b231f2851b981640a022cc25f0db700dbb33dc1af8bacbe9f1c1b5c6d086e84edf61ec7d80c29d1657101c86565e3e39f58fd65a86586955e45d0766541af7a7306cb8684754e40deb81ea9006b61f80764c35602002003efdbe246f038054d089743fa6ae56bb13d78e3b5abf2fe1e5531ac8b012bd5fb66e255ac2fc7d8ec91e96bebaf47674aff56e33a1ee36af2d2c1e593ab2833853dba34fb7100c4e07c36c5531bf5509e059efc63ea22fb0e095b5034e023237c14981eeb07ce395e391871da0eb0bfa19a83962b81094e3753afc362a2bf09db9d9c1f844417b366c334b459fc2818b032337d18180b0425ea02bc52e52bdccae2388c30c8f3dd3e1d45b05c37e4e171abb477764096eea603f67fe0ce2830705d1d5d43bdd5fa91d06d799a3abf4a13092d5d3e72a79855ab0029635ef623cd037a8d481714862f89fc2869973f5a715dd89a610bf79edceb76ff5d7f5f4b027ee67f1cabbd8556e118a483e5110d041da98c17847e99d21435972662614cab7fd0e389e59407fd4d9fd4d532130513ba53201ab61a9e00b3062e1414c317682b9ff0ea511b8dae4a4e4f0c0f1451d5695523ec518f365441753647bdbd77c73aa4f7b3685d527fdd8aa278effe9abe799172f070a3504ba8ab7222d440f97536cea84998f14ba6c47fd600de0fcf51d648901898fd0f3b60605e6bbe00a93ecd13fd47014f06db3d1b86010d8b5844a1715b3f7dda12f9416380481c2f6139abefd34adef1f9bfae718070d6b83f791f12fc3c4245fda5725bf9f39cfb7c2cea1087517a661b61eff8501d1ebbeb3bffc9b9816a1f9f4dcb3aa76b0987f4325d26be9ac916f8d3ffd752143b33cf07f06d078a9c4e5fa0f599ca0603b705317f2fb52dc6c50c5fc0f7e92cc4f57c2c8281300e86b8fdffc2e929e6c9e974032a9d388e0ccd6b871baa59a9b661582bca7ef81431b7f2dd3279eb6bcdb5157ed980fb36b90b1fe73f7d2c12d9421c82ff9aad850ccd05b58ebd9ce782726b17df720fa54fb1def73a00aaf1a6ab56cf8520f2218c4058d9312fea66f2dce1e0ba24dc94eac7bd5746a8885a20eb32c27f0069bb59288106f0a87964b75fc7af09576d74be1d39fed7d0a85154082f732533861c9ebd3cd63921534d704153a3d175a90dac5a0d2065bbed2a884d6833b77972d8bf88876086bcc7c3f935cf18ee4cd733c7f764faac8b6c4938a975a791434818b74e71ace0c863c146b47c5cd84ea7abfcfed21e0d505293006045fdb4630510ddb8399b923e009c9fde0cc8e6c8c196e6774159cdcf14c5fc0e4488d702255f176c5a57b4710f8f4a151fae327215c38052bf86edaf001ca069715703a91a1c41f6c0717a6078e98f8401a254c5d6bbe405844049bd5ae38fc4f2610bdccf97d8bc7714c38045f7ece2362af8db7ccfa803d86d3bb0b9689c8702d5206bf2cfa3ed6f731bc4b7f64bd890a077ddfa552aaa153c954b042737489da4907ef56e0b846fa4d16aec8e2d95163225fda55caf14127fa4d2affc99857f3fd7015061dfcdef45d6a97382bded4b34c214de8f31c7c5d5adb9e0c59583097ca5b37605bd2c3eaefe297908d7501635469a78256ed7b34120d5215864b9adf032baab2262c1d31118ace9175642e54eb85d8ed78875eb3d4a4c94cd4e9d14ceb0ad5225cdbdc9cf06f333899d767611f5b4a432400a14383197e6cea4322cd8117be081330ee01c03c3838f63bc722abfb78fe0462f5b988acd442acaf94e5ff5054a350c68618a10646c040c2a410ad6b5e38563847192c4eb409f581c643464a7206b07403019aad36d6b98d15b4822f4896117d66a98a7b858990bbb92cf607880a8574b0b8ec8a9aecb5774b0d04a3802a8b4717606f7a7187dc4b2e00c911af3b6c30f7e1e8abcf5f6839773dfdf84540911a09a18226ac0182fc1061465b71fe63e90331816fa008ac03cb894853bf483f9ac8aedb055359f5abb77a150e8423b2134a8d4fe3a0e371ec7bbc89ec7b1854f39a72e0b0dd1ef59cfe6eb914ff9e80bdf75dde9d358e38088eb2a07d90d5b290802c2df6b4915533826f17b8a855c7bd2e6e7650216328842caabcd97703ee8ca7774d745420cf28776b3f262bb922d97b1cd901c20f60834a4d168f13b586143916eb9502bd674a966a25dc37250882c1284aed2ac0157ba798fac8345f39bfd87e47f858514040c0492417088bbb3efb0ec332496c46906cede06b9787c7c97e4bd748ae29df47e0144896d7f157c83df1d91ca06125f3781aa46fb0383844cfc8488cf3115a4d5a7d9e0375b3e4813923b67a566e7ad0b3af7bcd9415150c25ef3062ec55d6405ab84b879ea957778575daa405d238d88a9b37636488820345b5ad0f172e2a737ad4dcb34f0a1d1dfc01695086c01682e649c2fa35f79f4dffdfa998f1ad4bcf756403f0c3d92a8ceaa16dcbfbb26d74ea71e7b3815d7e4fb8343c4e9fb1b7a821836d2bbcf42d6fdd202cd633bd0b274c3dc5be04c93d7c0610b0e6322c1a832a150d106733b97415dbcf0403e0c5415936095fe706117ce0d98e5d94a703412685c124c9179559913d60aa6e68e49802d87955552b9670c5ef049b041609f993f0632c06d8650c1d9d3f45bb88f97c38bcb2a00cdde4f4083b80197f3bcc461a820f7d44bad9aa449287580066da6c886a906b5bde1207192e8c31ee93185cf15ff3af6e2e4fa07ed575cf8a5cb374891fda809a843a7015371e81ef27286dd92657e0586bae9dc9b56db91460673ac27fd6f37ad5003fdbebeba9553aa4fc7a0e572376cc5055d03d113189960bfdea6bbbc99fd33c5f3fffd8cb6317667fe31f29616305bc420f783f5e7072fed34a163fc4d47918908b1e8692156a3f4ab81f684666cc1fdb0b4b1d79a3a0726f8fda029eaa37c1fc5c54816e6080c8ea8a25c1cd687ea30ba236363c187a6d3f12e4c0f1911f4eeb33cc435f6e156790191592351ee972855ac682740d939fc4259a7ea8dfd19896d5e12494fbcf92e1c5d499f4cf7a674360eb949618c966fb4738c1dd7622fd94dbbc80dfbe249a48cb001a56e7d5db21d7ae82f602d17f194a895391b6761b875955a4feb981e60728d3a5fc9a967ba4574f13d2d5236c434cb95debe28cdec1348ad77e0f0021ab24eeb308f4ac25eeaaaca10a541953c1d6f1c43788dcba87aa9fdc60d24ad54ccee570933f99da4334b57e3dca369567ec63f637f3eb13cfff5ebd9c3b2b34b70bcc50a2c110ec86a582f6e8be0f5f953555dff9b5d6d63a15c0b9c2e1c876821912fc134680b5ac8d7daed5976d9e7ad00bfc56ba3b83fdfab25d8d2c56ddd170dd1c92f66037e67954c290c63fb732b5f1d7f8156b608bf419aa6ab48b9a7fdbce4067d2c47e66c8ff882bf893a106316e9eda3cf210f8b8eae165c20879e86925f1d5ad17b4ebf3b73667dea88f2cb7b9cbef2b23beeefc4236cc251c59ce25b1d0110002e521f09de58b9d5833d826ff86f10e8e4aac3c7c34d58455199d462f3260ad1e3147ea1ac8844e41239f3dbea88aff23250f1a7fbb46462cea38a719a2545963ff902e69afa040915309fd1927a3eaf64c698317de77f4a17188830b2c8bc3423dcb1519f4eef0b412c810eb4ef2ebfa85bb176f29049a2504de9d18cb21bb5d6661a726d6f171fededec4d6c851376ca1b3a7a89ec74f2e3a4920d46f815bac0b56461018609f4de5cb6ef69a79af4e70c10ccdb4ce12bf1bff2c1e0f22c4da75d3bf1701c229ac21c245e6edaacd16dd1faf73d53b20bad62bb7fc825e54bb64a518a696f4258e5af10b955b9eb23645b50fc2300c60fdd21048a0fbba73aa98d1f97ffd59e023f4fe4f4c872672e1c5eee68bd5d444cba980458b8767830868a2b0b0d218928151ea2d600268acac34aecfb61a79f79d52d311df610be3d97d62b8cff25e27a6dbe07b48932e073a2efee9aa8e0be70486d87827536ed6690148d055dcd238cc8c3d1bba8b6aa7a1e897ce6bc9b3e2f36d65c574083e61e82b45e2f8bca568b8562c122053b5c3d4e484aaa90fcf13c344595a43cae3db97eae61a7b4d961e870a2c61ea8311fa99bdda9fab04f0e7396a7e9a52499729db873206795728d6a1137a2671396f015f2b9a7ea41441fb69ca937aa240f3253d3600f8d9f2008a3fafe1e1ad24ecf0f7310ad517adac9ea4964c19b7258785fc42485fc73dc68290178513b6a74195d8070354b0921f8b9f5ac7b3227656f1bea137175cb40f928af79e67116abe546dc35309b8968408971c8444a33e232d014f82dcdc5b8d97704d6b0145f8dde18c9af18fde5c4c157107e812094b968b1b94f313c456fc5bd7e41eb675fd08b4c5b198c496d5a7292e6db596e0b1781403eb282603b43440b94777281c28b874960e4e90344441a7074b786ac1df6da2e9294f809ca1f8f899a64899319034ec9c404f2bdc9680a20cfba86a8381589fe038522de69258d5dbf2b2f686046d03f4e74c3b4c17d850050489e6e08c79b31983b736b27274e0cf3913c83d624c2cf186250329f6afc584de96a6036d6958e5bb8e701f6fd50ea67505a6a07baae244b1a6eb719256c09af29b5bb2f51af0f86212976ff0d9354a6a0c847ec9aa40f254d379672d0779c1e7e26c86e975baa3480d76b0d00cc49c0ea759a423a2768bfbf53eafca9c21c7ff6914f8dafd2d39013dd130eb9e7a9473f428883a8c8d85d4fd5758aadc61455af96b0f0fbdf53c426c4dc2f6b7a78f5907baa0adcc4604411b3271df38c2bef0387b0688a028d7e9062f7bdec7268a9af620df2d2f93f6d490d9c564041c048df8005047eb2d3403d887db20dc35dde733642afe6183410ee9f486f22a82e6738ccc8afc4619cb191f87e486468ad4716fce96e2b6c78d5ddfe663564ea8f973c6d90558de156915c3acc3ea2780af10b9027b2467dca7bf396f96292c014edfe7f0d555253e6bf6b8b0bf77a75b412ef38ad85310b520a26f0d149bd0985009cb90c1cc96bc4c3f7e9f72107d667289ca873c41d88e0fc8b963dbbe2182e09bbcf4ed1d28a90820479665ee63e967c49c8bab07b0d1c201fedb27af65b556cb99b00f27c73657c9c5477d9e988d7446f095fd8867f2c02f7f27dfe0bc408c7c2320893da788cbcb61186d0a834e0b340429ef1f04f65e713037117335e46a27d22e5941b5de3089920e4b23584e4a525f784a3687cc31b3535f9dd69c4da0f815c7eb8de7c117fd5d37ef36e55831ff2cdeec4939e32d8ffbf13789837c14f462d721d4725a375a19c62107cd714f9c13243bda73cf849923b6689842f7712bd8aba64bf2d06dc3352a7e516d6cd04cd38c5b0117d2d5d3430fb032afa28c677f0279c020e9d06b9d7b0f19251a0d4261b1370c4de9ed1ff112db84fa9f6f37d5afbd569af837154ab8a1b9ebd72089b3e8f179513cf0c3ed5265848054c2c02de1b4a26ed1b0e2a7cbcacca1b5c6f675924f48a1adfca867d81aeac836cd08b7a33d6b770231b131a5eeb826b34f9bfb6001d2aa8be885cd4945409f555c9184bf2b30a00692a59acdaf8774a102d3bab7dcd930812e350efe0c82c1bad9974d4cdf05f114b6c75ebb1589003b4f77ba67cd354534151f2d74000121f8fe77e928d643c46a3f15d1cc485a7583908cf30b3c600f8517bfe0570850598264bd3541cba45aab6c8ee1a42d6645be1ace3ad937afc26ae8c0f7529bd8a9a6758a7110e72f0ed114d09088f7fdb50da1eb667afc3ec2ebb462b583267dd57e7877c4a8aef0dec9c045a5a7761e14f83764953ac8ed09352cc479d346b1d899071b2557747695044f80f706b5aa6b4ffef43ef450382372cfe0e59e8ef82b99b274e69785d62626663ef0ec1b9475cf87b4a88a1d12fd888648ff5d1521c9abc23abdde7523f28aa04c6f9029f5d9413262b85ad6d60cf6f2a824e8bce619ec1d2926be9a8d877a4e418e4fe3be0c199832e549ebca57a3c61cb24fe8490236c7c0648e8d535bcd7ea9fe46f924d3e8f431acc15adcd6dd69bdaa8178d353734c39db895ae11d55be0524ed5f6541920e4b671e5684f42afb67a86184a56e826bbff2b85ad4a7aa4eba44ca3ed8b3955f3c9c173a4d27b75848a5c961fd9d520c3f02033c1ea86058ccee50684ffd43a4a23d90ff494631614df9667ed5089362d0b0c448e822635ec12e7bb870727709bec759e8608f20682527305778771f469b416176b9daf896f6c075105a2f063d4dc7b9a4f0e0d01489ec328f7a786b41824c2e2a4035154e3b99ba48ed98d3830bece78897bcde9f2fc77a1b9577b2d02c46c31a6145ef0e56190a788da4309d43587284ddfef1ab96d1d8caa41b1ffbfa31da97c8c96586e84275a26fffe176b1ed235143aaa9f8d2ef2731452e8a33ded82fd27757ada3f8d1bb64340065a482fe15ffc6d562687f2eca90e68abd2bebf0024bccdccc66377dcf85f8b8da95f842eff5fade7fdc67b0b5e4b59f1a2b883bf17952b3196f66ee1b3f2b54939311a19fba81ca17b560a813da423be47c8d50e651732902b6ee0c011e9b2d6445d303807036f06f1353bd88ac3029c19aa46a78ccc2cf98f94852b5ea6641bd2ba6896543360e24c8ef9ffd15080e58928a41ce2e6bc294e1b769b5d744428313f778812b005f84cbf4a9c882a1556bf08fe162892c619d3620f3cc7b95d6e03e486d0ac94c7b2690bcc3d1acb81c9166c517104fd6560bcc58af532da6425b5f2d6796af550b36cd32a096f4759ea9a1b9e7249e317b8fa33d628b8d157fcc1924762bfd92d41e4c65b04e663f30067a442e5e3402f516281332dd6220776d89f1a7972e3e68f1edef1a796dab8c36be62f7d18edc5c1cc54530e070a8f117f8f2dda76ac20d86a829b83f0a3dcc51d83f660e754765d2a6db4a9b6346f2bae83c3de7592a30161e507636804078e338331efff3e10b22ab971ed19468c65e72bbabc9a1b6c788662154827ce5e9e5b181964b2d5cebaf22d29ad8029ddfe0822d55908ec32a2035c874982eb58cf504b8145d39b4f30610683c898f52c7185aa84c15826e308066f68d7f02a50e0b00434e94691367de0dfbec1c2a90c1607706b114300c11676c9856a008c87d92f296ea4343fefccf89e740b528156fc779e7b065665bc82a30b565118821989f07123ba3a33c03b1e2018e8660b817be2ff9fea5c3519727f291a8970c3f8b6d0236a3988a758bcdd2cf78ca6e2c8ee5d0a74e59216e104e96fed7a48ac11321d0a6d1e372e76aef93e3b18bb831fb809cb18663580af434482d768300275c07535060d1c62ceb098850d567d59c8d4941352b0532aceddc768f7ff6fe6b4d21f7cd3fff60dc4ed7161c6a3c9c11d54f4d112bfaf51086df128045e9fd81a12382273047defebf6f152c91e2700836d1afaa7e4544d79108a1e5c128d8b6e91948e301341db8207bfa9b7be39191dde71117bb6b39403d93b77dc2e0d341905b332443e04493713d4075677f0b948143c8ecaa7ce5e864b27b2f295fd425522e16d47f55298237144dc45b9e7c23555dc3c8529b00f2d836a6d781bbdf74b68e59565790cc6bf5c6cff67f3dfe75959880e2e27ea9a786db7f6436d1a73d5e0fcbe653e002c5fb16023e48436de5024163b6059264d0a88e5a09445be01dc50a5c5cd913b471cadc95d1a8357a584b5fe44e896fcd442a867f034d8aa53dc3ecf89d62973ba576e9a0fe12410effa9c7a5792ff5ab298956035520340c6eb0931e2289000d03549e477a945cd925abd27ae0edb41cac5814ae7da1ba91626e26a7d519eeebb91ca820c90214badd004a3159a7584d56d81954e5d4d6b4e0767e0692977c586a512e4c81525fbaf558814f5d8e2d44215b292a4e9bf651043370641b99d5af250ea44997bcfdbceb18d379fc8d793f0457cc3ae532703897b714a1b90dd947f0eab7809f83451cc2e6e4bf16750f621a27b2bc14107ee435ea44b196645636365aac8476ce73fca07ad80735e0ba7c7aa67e2246f0a86907a9920c2f9d563c0d1d2e0e96fd5761ec6241ada694e3dd418dff246c290869ad9d456235db9c2e17534ec730d9492636419c166eb145ac0d99a13cf3cb8149c875bc421708d9f26c80f7ba2a625d63cf272c0ae2d6a6338de87e93c2e37e9c983d97c93586f688224c055b5d3ae8a7fd08790da62760b113e6e64fdb69b83a858d5c046fa1917326ab976f1bd8d8ffd839f2c08c1b2e2a31b83361f065382684133011404cb8588398f40eb7934aec4f31bfd4f23aecc32af221b26473288ace5e259784ca429a3c7e74ae0780886a126ced4937d617240a96ae8426b623e4fe2257fdaf029b42e58bf2ff1e5192af9168896887307a9b705c12f0efa1a79bb8b91f4f0a6c7f9563eb3101cc5da7ba541b2e9d04f9c34a529cf770f31e9fdc524f087b10f19f0edcbbe1a2e2e85d310a64ec922ae128ce4310ac33336b8046c86594d3096da1225d074f2b108c45679b951410147eb455a1e2f7e07b3bbdd80e7f6e3320fa8b340446bf67d7c1100ed7eca60373dd73d01d3dd4d0d3df8a5181896d1f269e6cbda78df99e47b41d1fc3e9ae4b172eb31fa21b3549161386750521cc8442f43c2f0ffcd5deee4980a24134c6830f64f783da685ec70d1e7964fcbe917bddbfbee02d33207839da192537e132a6152</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2018/02/23/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
