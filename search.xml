<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>矩阵奇异值分解</title>
    <url>/2020/04/03/%E7%9F%A9%E9%98%B5%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/</url>
    <content><![CDATA[<p>矩阵的奇异值分解（singular value decomposition，简称SVD）是线性代数中很重要的内容，并且奇异值分解过程也是线性代数中相似对角化分解（也被称为特征值分解，eigenvalue decomposition，简称EVD）的延伸。因此，以下将从线性代数中最基础的矩阵分解开始讲起，引出奇异值分解的定义，并最终给出奇异值分解的低秩逼近问题相关的证明过程。 </p>
<a id="more"></a>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>空域矩阵预滤波DOA估计</title>
    <url>/2020/04/02/%E7%A9%BA%E5%9F%9F%E7%9F%A9%E9%98%B5%E9%A2%84%E6%BB%A4%E6%B3%A2DOA%E4%BC%B0%E8%AE%A1/</url>
    <content><![CDATA[<p>实际阵列在接收信号的同时，由于复杂的海洋环境影响，往往会伴有很多干扰信号，但是只有一部分方位是人们感兴趣的，所以对其他方位的噪声以及干扰进行抑制是非常有必要的，由此需要一个空域滤波器，能够做到只让来自感兴趣方向的信号通过，并且抑制来自其余不感兴趣方向的信号。矩阵空域滤波器以及波束域滤波器是空域滤波器中最为主要的两大分支。其中矩阵空域滤波器是比波束域滤波器更为合适作为预滤波器的一种空域滤波器，该滤波器不仅有着空域滤波器的基本特性，最为重要的一个特性就是，该滤波器处理完阵列信号后输出的数据不同于波束域滤波器输出的波束域信号，其输出仍为阵列信号。因此可以改良阵列数据，进而达到预处理的目的以及达到提高目标方位估计分辨率以及目标检测的能力。<br><a id="more"></a></p>
<h1 id="空域矩阵滤波器原理"><a href="#空域矩阵滤波器原理" class="headerlink" title="空域矩阵滤波器原理"></a>空域矩阵滤波器原理</h1>]]></content>
      <tags>
        <tag>阵列信号处理</tag>
        <tag>凸优化</tag>
        <tag>滤波器</tag>
      </tags>
  </entry>
  <entry>
    <title>二阶锥规划</title>
    <url>/2020/04/02/%E4%BA%8C%E9%98%B6%E9%94%A5%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<p>二阶锥规划(Second Order Cone Programming，SOCP)是凸优化问题的一个子集，通过引入二阶锥规划方法，可以解决大量优化设计问题，同时应用此方法，能解决方位估计算法包括旁瓣级、主瓣宽度、阵增益、稳健性在内的很多性能指标无法兼顾的问题，本部分介绍二阶锥规划优化设计方法，用于基于不同设计准则的空域矩阵滤波器求最优解。<br><a id="more"></a><br>对于一个向量空间$V$与它的一个子集 ，如果子集$C$中的任意一点$x$与任意整数$a$，其乘积$ax$仍然属于子集$C$，则称$C$为一个锥。若一个锥$C$中任意两点$x$与$y$，以及任意两个正数$a$与$b$，都有$ax + by$属于$C$，则该锥为凸锥。</p>
<p>二阶锥规划是凸优化问题的一个子问题，它是在二阶锥约束和线性等式约束的条件下，最小化某线性目标函数，这是一种非常高效的求解算法，目的就是在满足约束条件的锥内寻找能够使目标函数最小化的最优点。其中二阶是指锥里面用到的是二范数，下式是一个二阶锥的表达式：<br><img src="/images/Snipaste_second_order.png" alt="img"> </p>
<p>其中$b \in {C^{a \times 1}}$，$y \in {C^{a \times 1}}$，${A_i} \in {C^{({a_i} - 1) \times a}}$，${b_i} \in {C^{({a_i} - 1) \times 1}}$，${c_i} \in {C^{a \times 1}}$，$c_i^Ty \in R$，${d_i} \in R$，$F \in {C^{g \times a}}$，$g \in {C^{g \times 1}}$，每个不等式约束可以表示为如下二阶锥： </p>
<p><img src="/images/Snipaste_second_1.png" alt="img"></p>
<p>其中$SOC_i^ { { a_i } }$是空间${ C^ { { a_i } } }$的二阶锥，定义为</p>
<p><img src="/images/Snipaste_second_2.png" alt="img"></p>
<p>式中等式约束可以表示为 </p>
<script type="math/tex; mode=display">
g - Fy \in  { \{ 0\} ^g }</script><p>其中零锥${\{ 0\} ^g}$，定义为：</p>
<p><img src="/images/Snipaste_second_3.png" alt="img"> </p>
<p>线性规划和凸二次规划都属于二阶锥规划，同时，由于二阶锥规划约束可以表示为线性矩阵不等式，所以它也是半定规划的子集。 </p>
<p><img src="/images/Snipaste_second_4.png" alt="img"> </p>
<p>其中$I$表示单位矩阵<br>可以通过内点法求解二阶锥规划问题，例如SeDuMi，相比于半正定规划求解，通过这种方法求解此类优化问题速度更快。</p>
]]></content>
      <tags>
        <tag>数学</tag>
        <tag>凸优化</tag>
        <tag>二阶锥</tag>
      </tags>
  </entry>
  <entry>
    <title>5G Massive MIMO</title>
    <url>/2020/03/27/5G-Massive-MIMO/</url>
    <content><![CDATA[<p>修改中</p>
<p>Massive MIMO（大规模天线技术，亦称为Large Scale MIMO）是第五代移动通信（5G）中提高系统容量和频谱利用率的关键技术。此技术中，基站利用同一个时频域资源同时为多个终端进行服务，从而增强了基站同时接收和发送多路不同信号的能力，可以有效的提升频谱利用率、数据传输的稳定性和可靠性。 </p>
<a id="more"></a>
<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>原创文章，水平有限，如发现有错误，恳请及时联系作者修改，欢迎大家一起学习。 </p>
<p>本节作为引言，不讨论技术，只讨论当下实际中存在的一些问题，接下来会逐步更新Massive MIMO的部分关键技术。 </p>
<p>在LTE网络中，随着人们上网方式的改变，数据业务在近些年一直保持着爆炸性的增长，现有网络经常会出现支持不流畅的现象，但是在这样的情况下，仍然存在以下几个亟待解决的问题： </p>
<h3 id="移动视频的需求仍然在逐年增加"><a href="#移动视频的需求仍然在逐年增加" class="headerlink" title="移动视频的需求仍然在逐年增加"></a>移动视频的需求仍然在逐年增加</h3><p>这个问题是对峰值流量的一种挑战，可以考虑的方法包括：<strong>增大带宽</strong>；<strong>增加基站的密度</strong>；<strong>提高发射功率</strong>，这是比较不现实的，终端如果增加发射功率会导致电池电量的大量消耗，基站也存在同样问题，同时基站发射功率如果过大，会对邻区造成干扰；<strong>高Rank空分技术</strong>，现有的空分技术，波束之间的干扰比较大，导致不同终端的影响较大，从而降低了空分效率，如果引入高Rank空分技术，相互之间的干扰变小，类似很多辆车，并排行驶在泥泞的路上，尽管如果能安全通过，确实会比先后通过流量更高，但是效果并不明显，小心翼翼且易出事故，如果形成很多条互不干扰的路，就像立交桥一样，各自行驶，干扰极小，那么就极大的提升峰值流量。</p>
<h3 id="小区边缘用户体验差"><a href="#小区边缘用户体验差" class="headerlink" title="小区边缘用户体验差"></a>小区边缘用户体验差</h3><p>传统的4G宏站，从小区中心到小区边缘，业务速率会大幅度下滑，解决办法可以考虑如下：<strong>提高发射功率</strong>；<strong>新增站点补盲</strong>，这有悖于蜂窝网络的初衷，会大幅的提升组网费用；<strong>小区间干扰协调</strong>;<strong>波束赋形</strong>，传统的宽波束能量比较分散，作用距离相对较短，该方法可以通过使波束变窄，集中能量，则基站覆盖面积增大，如果能做到这一点，边缘用户的接收sinr会更高，体验也会得到明显提升，这种现象也可以类比相同功率的白炽灯、手电筒和激光笔，光束越窄，作用范围越大。</p>
<h3 id="垂直覆盖面临困难"><a href="#垂直覆盖面临困难" class="headerlink" title="垂直覆盖面临困难"></a>垂直覆盖面临困难</h3><p>传统4G宏站由于天线垂直波束过窄，架设天线时应着重考虑大多数的地面用户，天线高度不宜过高，所以无法为高层楼提供垂直的覆盖，造成高层楼信号较差。解决办法：<strong>提高基站架设高度</strong>;<strong>多组天线，分别覆盖</strong>;<strong>3D波束赋形</strong>，Massive MIMO 可在水平和垂直两个维度动态调整信号方向，使信号能量更集中、方向更精准，降低小区间的干扰，从而支持更多的用户在相同的时频资源上并行传输(空分复用)，从而达到提升小区吞吐量和边缘用户速率的效果。天线增益的提升，穿墙能力得到提升，实现了广度和深度的要求进行了有效的宽松。</p>
<p>此时，我们需要考虑，怎样才能有效提高信号的强度呢？提高信号强度，即提高接收到得信号功率，终端接收到的信号的信号功率大小表达式如下:</p>
<script type="math/tex; mode=display">
{ P_ { rx } }  = \frac { { { P_ { tx } } } } { { 4\pi  { R^2 } } } \frac { { { \lambda ^2 } } } { { 4\pi } } { G_ { rx } } { G_ { tx } }</script><p>其中不能无限的增大发射功率${P_{tx}}$，不能缩短基站和手机之间的距离$R$，低频段资源又十分有限，很难将频带降低$\lambda$，所以无法增大波长，此时只能通过提升天线的数量，把两个天线增益参数${G_{rx}}$和${G_{tx}}$再次提升，进而提高接收功率。</p>
<p>5G采用了高频段，虽然高频信号的传播损耗非常大，但是由于高频段波长短，因此可以在有效的面积内部署更多的天线阵子，通过大规模天线阵列形成具有非常高增益的窄波束来抵消传播损失。这个特点对手机尤为重要，为其实现Massive MIMO奠定了一个非常好的基础。</p>
<p>Massive MIMO主要存在以下几点优势： </p>
<ul>
<li>天线波束变窄<br>传统的8天线，可以实现波束赋形，把不同用户放在不同的波束中，干扰较小；如果采用Massive MIMO,波束主瓣更窄，数量更多，相互之间干扰变小。</li>
<li><p>空分隔离更易</p>
</li>
<li><p>复用流数增多<br>流数越多，速率越高</p>
</li>
<li>小区容量提升<h2 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h2></li>
</ul>
<h3 id="波束赋形"><a href="#波束赋形" class="headerlink" title="波束赋形"></a>波束赋形</h3><p>波束赋形是指根据特定场景自适应的调整天线阵列的幅度图。此过程中，天线阵列会形成一个指向用户的波束，基站根据终端上行的信号来判断来波方向，进而改变下行波束的赋形权值，使波束跟随用户移动。而Massive MIMO是通过引入大量的天线，使天线阵列同一时间和频率资源满足空间上分离的多位用户的需求。</p>
<ul>
<li>提升小区边缘用户的接收信号质量</li>
</ul>
<ul>
<li>降低邻区的干扰<br>三维立体信号可以灵活的跟踪终端，而排除传统MIMO宽波束在跟踪终端的同时，由于宽波束对邻区产生干扰</li>
</ul>
<h3 id="高Rank空分技术"><a href="#高Rank空分技术" class="headerlink" title="高Rank空分技术"></a>高Rank空分技术</h3><ul>
<li><p>提升单用户峰值速率 </p>
</li>
<li><p>提升小区空分用户数量<br>相比传统LTE系统，支持更高阶的MU-MIMO，支持远超过8个用户同时传输数据</p>
</li>
<li>提升小区频谱效率<br>超过100根天线，相比传统8天线获得更高的空分复用增益，极大提高频谱利用效率</li>
<li>提升小区峰值速率 </li>
</ul>
<h3 id="3D波束赋形"><a href="#3D波束赋形" class="headerlink" title="3D波束赋形"></a>3D波束赋形</h3><p><strong>避免“灯下黑”问题</strong>： 在理论上，4G宏站正下方的辐射存在“灯下黑”现象，辐射水平应该是最低的，这是因为天线存在指向性，传播信号基本是以一定的下倾角水平方向发射，而不是垂直方向，所以基站之下的建筑恰好处于盲区，基站辐射最小，其接收的信号一般为远处基站的信号。其中，下倾角越大，覆盖越小，反之覆盖面积就越大。基站辐射强度即基站信号强度，基站信号强度与手机的辐射强度密切相关，离基站越远，基站信号强度越弱，手机发射的功率会越大。</p>
<p>达成上述三项的关键在于预编码技术，后续将从技术角度分别介绍数字预编码技术和模拟预编码技术。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>暂无</p>
]]></content>
      <categories>
        <category>5G</category>
        <category>Massive MIMO</category>
        <category>通信</category>
        <category>阵列信号处理</category>
      </categories>
      <tags>
        <tag>通信</tag>
        <tag>阵列信号处理</tag>
      </tags>
  </entry>
  <entry>
    <title>稳健矢量最优化自适应波束形成</title>
    <url>/2019/05/02/%E7%A8%B3%E5%81%A5%E7%9F%A2%E9%87%8F%E6%9C%80%E4%BC%98%E5%8C%96%E8%87%AA%E9%80%82%E5%BA%94%E6%B3%A2%E6%9D%9F%E5%BD%A2%E6%88%90/</url>
    <content><![CDATA[<p>在提高算法稳健性时，会用到不同的准则作为优化准则，将这些算法统一到一个框架下，本文构造了矢量最优化稳健波束形成方法，并通过二阶锥规划理论方法进行求解，分析各个参数对最优权矢量的影响，并推导自适应权矢量的近似表达式。</p>
<a id="more"></a>]]></content>
      <categories>
        <category>自适应波束形成</category>
      </categories>
      <tags>
        <tag>稳健</tag>
        <tag>权矢量</tag>
        <tag>最优化</tag>
      </tags>
  </entry>
  <entry>
    <title>多重信号子空间分类算法</title>
    <url>/2019/03/02/%E5%A4%9A%E9%87%8D%E4%BF%A1%E5%8F%B7%E5%AD%90%E7%A9%BA%E9%97%B4%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<p>多重信号特征法通常又被称为多重信号子空间分类算法，这种信号子空间方法具有多信号同时测向能力，并且其方位分辨率较高，它的主要思想是：将阵列输出数据进行自相关处理后获得的协方差矩阵进行特征分解，得到信号子空间和噪声子空间，然后利用这两个子空间的正交性来构造MUSIC方位谱，此时方位谱的谱峰就是需要估计的信号方位。 </p>
<a id="more"></a>
<p>假设信号与噪声之间不具有相关性，同时各个阵元之间的噪声互相不相关，则根据窄带信号模型，其协方差矩阵为： </p>
<script type="math/tex; mode=display">
R = E[X { X^H } ] = AE[S { S^H } ] { A^H }  + E[N { N^H } ] = A { R_s } { A^H } + { \sigma ^2 } I</script><p>其中，符号H表示矩阵的共轭转置。$S$表示目标信号，对$R$进行特征分解，则信号协方差矩阵可以由特征值和对应的特征向量表示为如下形式：</p>
<script type="math/tex; mode=display">
R { \rm { = } } \sum\limits_ { i = 1 } ^M { { \lambda _i } }  { e_i } e_i^H</script>]]></content>
      <tags>
        <tag>阵列信号处理</tag>
        <tag>DOA</tag>
        <tag>Matlab仿真</tag>
      </tags>
  </entry>
  <entry>
    <title>协方差矩阵重构的零陷展宽算法</title>
    <url>/2018/06/27/%E5%8D%8F%E6%96%B9%E5%B7%AE%E7%9F%A9%E9%98%B5%E9%87%8D%E6%9E%84%E7%9A%84%E9%9B%B6%E9%99%B7%E5%B1%95%E5%AE%BD%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Welcome to my blog, enter password to read.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="5604a9e733cf8f71711e2d9d19b1074376dd2f7c77e29d9d9aa41a18d522d7fb"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>阵列信号处理</category>
      </categories>
      <tags>
        <tag>阵列信号处理</tag>
        <tag>零陷</tag>
        <tag>Capon谱</tag>
      </tags>
  </entry>
  <entry>
    <title>常规波束形成</title>
    <url>/2018/03/27/%E5%B8%B8%E8%A7%84%E6%B3%A2%E6%9D%9F%E5%BD%A2%E6%88%90/</url>
    <content><![CDATA[<p>波束形成是阵列信号处理算法中最为基础也是应用最为广泛的一种算法，如今依旧是水声方面信号处理的主要组成部分之一。波束形成算法的功能大致可以分为两个方面，一方面是为了获得较为理想的输出信噪比，另一方面是为了获得较高的DOA分辨能力。因此声呐要想具有良好性能，首先就要有一个性能优良的波束形成系统。<br><a id="more"></a><br>对于平面波而言，由于其幅度相同，所以到达基阵上的信号可以视为同一信号，但是由于各个阵元空间位置不同，导致对于同一时间接收到的信号，相对于参考阵元，各个阵元会有不同的到达时间延迟。如果采取方法对每个阵元的时延量进行补偿，再将各个阵元上的延迟信号求和，会形成一个标量输出，其目的就是形成这样一个波束，并将其扫描到一个特定的方向上。 </p>
<p>对于由$N$个间距为$d$，特性相同的传感器组成的均匀线列阵，如果信号的入射角度和阵列的法线方向的夹角为$\theta$，则每两个相邻的传感器收到的信号时间延迟为 </p>
<script type="math/tex; mode=display">
\tau { \rm { = } } \frac { \lambda } { c } d\sin \theta  = \frac { { 2\pi } } { w } d\sin \theta</script><p>式中，$c$为波速，$\lambda$为波长。<br>以第一个阵元为参考阵元，那么为了补偿各阵元时延，以形成一个主瓣，所以常规波束形成器的加权向量可以构造为</p>
<script type="math/tex; mode=display">
w(\theta ) = { [1{\rm { } } { e^ { - jw\tau } } { \rm { } } \cdots { \rm { } } { e^ { - jw(N - 1)\tau } } ] ^T }</script><p>则该算法的波束形成器输出可以表示为 </p>
<script type="math/tex; mode=display">
y(t) = { w^H } (\theta )X(t) = \sum\limits_ { i = 1 } ^N { { w_i } { x_i } (t) }</script><script type="math/tex; mode=display">
R = E[X { X^H } ]</script><p>实际中接收的信号都是由快拍数构成的，且因受到接收时间的限制，实际阵列接收到的数据长度都是有限的，所以无法获取理论分析所得协方差矩阵，因此只能用最大似然估计法对理论上的数值求取估计矩阵，估计矩阵表示如下： </p>
<script type="math/tex; mode=display">
\hat R = \frac { 1 } { L } X { X^H }</script><p>如果令加权向量中的观测范围可以变化，则其在形式上等同于扫描向量$a(\theta )$，则其输出功率可以表示为 </p>
<script type="math/tex; mode=display">
{ P_ { CBF } } (\theta ) = { w^H } (\theta )\hat Rw(\theta )</script><p>为了验证常规波束形成的方位估计效果，假设由16个各向同性的阵元组成的均匀线列阵，定义阵列的法线方向为${0^ \circ }$，阵元间距为$\lambda /2$，两个等强度的窄带信号入射到该阵列，信号的频率为2000Hz，噪声背景为高斯白噪声，同时信号和噪声不相关，快拍数为1024，改变信号的入射角度和信噪比，仿真结果如下：<br><img src="/images/CBF_1.png" alt="角度(-5,5),sinr=15dB"><br><img src="/images/CBF_2.png" alt="角度(-5,2),sinr=15dB"><br><img src="/images/CBF_3.png" alt="角度(-5,1),sinr=15dB"><br><img src="/images/CBF_4.png" alt="角度(-5,2),sinr=10dB"></p>
<p>在不同信号参数下，由常规波束形成法得到的空间方位谱分别在图(a)、(b)、(c)、(d)给出。当两个信号的入射角间隔${6^ \circ }$，信噪比为15dB时，如图(c)所示，已经无法正常分辨两个目标，保持信噪比不变，增大信号入射角度间隔至${7^ \circ }$，如图(b)，已经能够分辨两个目标，并且能给出目标正确的入射方向，如将间距增大到${10^ \circ }$，则图(a)，两个信号已经完全分离，在各自来波方向均有明显的峰，在将入射角度间距设置在${7^ \circ }$的情况下，令信噪比SNR下降至10dB，从图(d)中可以看到，由于入射的信号能量较低，输出数据的信噪比明显降低。</p>
]]></content>
      <categories>
        <category>阵列信号处理</category>
        <category>DOA</category>
      </categories>
      <tags>
        <tag>阵列信号处理</tag>
        <tag>波束形成</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2018/02/23/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
